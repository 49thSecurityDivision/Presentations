# for nessus files in here: infrastructure/aws/IaC/nessus{,2}/files
*.deb
# any log files
*.log

# # found at: https://docs.github.com/en/github/using-git/ignoring-files#further-reading
# Created by https://www.toptal.com/developers/gitignore/api/vagrant,ansible,terraform,direnv
# Edit at https://www.toptal.com/developers/gitignore?templates=vagrant,ansible,terraform,direnv

### Ansible ###
*.retry

### direnv ###
.direnv
.envrc

### Terraform ###
# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log

# Exclude all .tfvars files, which are likely to contain sentitive data, such as
# password, private keys, and other secrets. These should not be part of version
# control as they are data points which are potentially sensitive and subject
# to change depending on the environment.
#
*.tfvars

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc

### Vagrant ###
# General
.vagrant/

# Log files (if you are creating logs in debug mode, uncomment this)
# *.log

### Vagrant Patch ###
*.box

# End of https://www.toptal.com/developers/gitignore/api/vagrant,ansible,terraform,direnv
